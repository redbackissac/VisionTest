#ifndef H_ZERNIKEMASK
#define H_ZERNIKEMASK

#include <opencv2/opencv.hpp>  
#include <opencv2/imgproc/imgproc.hpp> 
#include <iostream>

#define L		0
#define THETA	1
#define H		2
#define K		3
#define N		7	//¡⁄”Ú≥ﬂ¥Á

#define MMPERPIXEL 0.0145503

using namespace cv;
using namespace std;

const double PI = 3.14159265358979323846;
//const int N = 7;


const Mat ZERPOLY00 = (Mat_<double>(7, 7) <<
	0, 0.0287, 0.0686, 0.0807, 0.0686, 0.0287, 0,
	0.0287, 0.0815, 0.0816, 0.0816, 0.0816, 0.0815, 0.0287,
	0.0686, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0686,
	0.0807, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0807,
	0.0686, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0686,
	0.0287, 0.0815, 0.0816, 0.0816, 0.0816, 0.0815, 0.0287,
	0, 0.0287, 0.0686, 0.0807, 0.0686, 0.0287, 0);

const Mat ZERPOLY11R = (Mat_<double>(7, 7) <<
	0.0000,  -0.0150, -0.0190, 0.0000, 0.0190, 0.0150, 0.0000,
	-0.0224, -0.0466, -0.0233, 0.0000, 0.0233, 0.0466, 0.0224,
	-0.0573, -0.0466, -0.0233, 0.0000, 0.0233, 0.0466, 0.0573,
	-0.0690, -0.0466, -0.0233, 0.0000, 0.0233, 0.0466, 0.0690,
	-0.0573, -0.0466, -0.0233, 0.0000, 0.0233, 0.0466, 0.0573,
	-0.0224, -0.0466, -0.0233, 0.0000, 0.0233, 0.0466, 0.0224,
	0.0000,  -0.0150, -0.0190, 0.0000, 0.0190, 0.0150, 0.0000);

const Mat ZERPOLY11I = (Mat_<double>(7, 7) <<
	0.0000,  -0.0224, -0.0573, -0.0690, -0.0573, -0.0224, 0.0000,
	-0.0150, -0.0466, -0.0466, -0.0466, -0.0466, -0.0466, -0.0150,
	-0.0190, -0.0233, -0.0233, -0.0233, -0.0233, -0.0233, -0.0190,
	0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
	0.0190,  0.0233,  0.0233,  0.0233,  0.0233,  0.0233,  0.0190,
	0.0150,  0.0466,  0.0466,  0.0466,  0.0466,  0.0466,  0.0150,
	0.0000,  0.0224,  0.0573,  0.0690,  0.0573,  0.0224,  0.0000);

const Mat ZERPOLY20 = (Mat_<double>(7, 7) <<
	0.0000, 0.0225,  0.0394,  0.0396,  0.0394,  0.0225,  0.0000,
	0.0225, 0.0271,  -0.0128, -0.0261, -0.0128, 0.0271,  0.0225,
	0.0394, -0.0128, -0.0528, -0.0661, -0.0528, -0.0128, 0.0394,
	0.0396, -0.0261, -0.0661, -0.0794, -0.0661, -0.0261, 0.0396,
	0.0394, -0.0128, -0.0528, -0.0661, -0.0528, -0.0128, 0.0394,
	0.0225, 0.0271,  -0.0128, -0.0261, -0.0128, 0.0271,  0.0225,
	0.0000, 0.0225,  0.0394,  0.0396,  0.0394,  0.0225,  0.0000);

const Mat ZERPOLY31R = (Mat_<double>(7, 7) <<
	0, -0.0103, -0.0073, 0, 0.0073, 0.0103, 0,
	-0.0153, -0.0018, 0.0162, 0, -0.0162, 0.0018, 0.0153,
	-0.0223, 0.0324, 0.0333, 0, -0.0333, -0.0324, 0.0223,
	-0.0190, 0.0438, 0.0390, 0, -0.0390, -0.0438, 0.0190,
	-0.0223, 0.0324, 0.0333, 0, -0.0333, -0.0324, 0.0223,
	-0.0153, -0.0018, 0.0162, 0, -0.0162, 0.0018, 0.0153,
	0, -0.0103, -0.0073, 0, 0.0073, 0.0103, 0);

const Mat ZERPOLY31I = (Mat_<double>(7, 7) <<
	0, -0.0153, -0.0223, -0.019, -0.0223, -0.0153, 0,
	-0.0103, -0.0018, 0.0324, 0.0438, 0.0324, -0.0018, -0.0103,
	-0.0073, 0.0162, 0.0333, 0.039, 0.0333, 0.0162, -0.0073,
	0, 0, 0, 0, 0, 0, 0,
	0.0073, -0.0162, -0.0333, -0.039, -0.0333, -0.0162, 0.0073,
	0.0103, 0.0018, -0.0324, -0.0438, -0.0324, 0.0018, 0.0103,
	0, 0.0153, 0.0223, 0.0190, 0.0223, 0.0153, 0);

const Mat ZERPOLY40 = (Mat_<double>(7, 7) <<
	0, 0.013, 0.0056, -0.0018, 0.0056, 0.013, 0,
	0.0130, -0.0186, -0.0323, -0.0239, -0.0323, -0.0186, 0.0130,
	0.0056, -0.0323, 0.0125, 0.0406, 0.0125, -0.0323, 0.0056,
	-0.0018, -0.0239, 0.0406, 0.0751, 0.0406, -0.0239, -0.0018,
	0.0056, -0.0323, 0.0125, 0.0406, 0.0125, -0.0323, 0.0056,
	0.0130, -0.0186, -0.0323, -0.0239, -0.0323, -0.0186, 0.0130,
	0, 0.013, 0.0056, -0.0018, 0.0056, 0.013, 0);


const Mat SOBELX = (Mat_<double>(7, 7) <<
	0, 0, 0, 0, 0, 0,0,
	0, 0, 0, 0, 0, 0,0,
	0, 0, -1, 0, 1,0,0,
	0, 0, -2, 0, 2,0,0,
	0, 0, -1, 0, 1,0,0,
	0, 0, 0, 0, 0, 0,0,
	0, 0, 0, 0, 0, 0,0);

const Mat SOBELY = (Mat_<double>(7, 7) <<
		0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0,
		0, 0, 1, 2, 1, 0, 0,
		0, 0, 0, 0, 0, 0, 0,
		0, 0,-1,-2,-1, 0, 0,
		0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0);


#endif
                                
